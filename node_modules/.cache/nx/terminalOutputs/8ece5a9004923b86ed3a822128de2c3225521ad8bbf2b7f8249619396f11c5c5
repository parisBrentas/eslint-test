
Linting "testapp"...
getParsedCommandLineOfConfigFile {
  configFileName: [32m'/users/paris/parisbre56/eslint_test/tsconfig.base.json'[39m,
  optionsToExtend: {
    noEmit: [33mtrue[39m,
    noUnusedLocals: [33mtrue[39m,
    noUnusedParameters: [33mtrue[39m,
    allowNonTsExtensions: [33mtrue[39m,
    allowJs: [33mtrue[39m,
    checkJs: [33mtrue[39m
  },
  host: {
    fileExists: [36m[Function: fileExists][39m,
    readDirectory: [36m[Function: readDirectory][39m,
    readFile: [36m[Function: readFile][39m,
    useCaseSensitiveFileNames: [33mfalse[39m,
    getCurrentDirectory: [36m[Function: getCurrentDirectory][39m,
    onUnRecoverableConfigFileDiagnostic: [36m[Function: diagnosticReporter][39m,
    trace: [36m[Function (anonymous)][39m
  },
  extendedConfigCache: Map(0) {},
  watchOptionsToExtend: [90mundefined[39m,
  extraFileExtensions: []
}
resolverFunction [Function: resolve] { relative: [36m[Function: relative][39m }
fullResolve {
  modulePath: [32m'react-cookie'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  settings: {
    [32m'import/resolver'[39m: {
      typescript: {},
      node: [36m[Object][39m,
      [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m: [36m[Object][39m,
      [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m: [36m[Object][39m
    },
    [32m'import/parsers'[39m: {
      [32m'@typescript-eslint/parser'[39m: [36m[Array][39m,
      [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-config-next/node_modules/@typescript-eslint/parser/dist/index.js'[39m: [36m[Array][39m
    },
    [32m'import/extensions'[39m: [ [32m'.js'[39m, [32m'.mjs'[39m, [32m'.jsx'[39m, [32m'.ts'[39m, [32m'.tsx'[39m, [32m'.d.ts'[39m ],
    [32m'import/external-module-folders'[39m: [ [32m'node_modules'[39m, [32m'node_modules/@types'[39m ],
    react: { version: [32m'detect'[39m },
    [32m'import/core-modules'[39m: [],
    [32m'import/ignore'[39m: [ [32m'node_modules'[39m, [32m'\\.(coffee|scss|css|less|hbs|svg|json)$'[39m ]
  }
}
configResolvers {
  typescript: {},
  node: { extensions: [ [32m'.ts'[39m, [32m'.tsx'[39m, [32m'.json'[39m, [32m'.ts'[39m, [32m'.d.ts'[39m ] },
  [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m: { extensions: [ [32m'.js'[39m, [32m'.jsx'[39m, [32m'.ts'[39m, [32m'.tsx'[39m ] },
  [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m: { alwaysTryTypes: [33mtrue[39m }
}
resolvers Map(4) {
  [32m'typescript'[39m => {},
  [32m'node'[39m => { extensions: [ [32m'.ts'[39m, [32m'.tsx'[39m, [32m'.json'[39m, [32m'.ts'[39m, [32m'.d.ts'[39m ] },
  [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m => { extensions: [ [32m'.js'[39m, [32m'.jsx'[39m, [32m'.ts'[39m, [32m'.tsx'[39m ] },
  [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m => { alwaysTryTypes: [33mtrue[39m }
}
resolver pair {
  name: [32m'typescript'[39m,
  config: {},
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
requireResolver {
  name: [32m'typescript'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
tryRequire {
  target: [32m'eslint-import-resolver-typescript'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
(end) tryRequire: module found, trying to load
(end) requireResolver: loaded resolver { interfaceVersion: [33m2[39m, resolve: [36m[Function: resolve][39m }
withResolver {
  resolver: { interfaceVersion: [33m2[39m, resolve: [36m[Function: resolve][39m },
  config: {}
}
v2 {
  resolver: { interfaceVersion: [33m2[39m, resolve: [36m[Function: resolve][39m },
  resolve: [36m[Function: resolve][39m,
  modulePath: [32m'react-cookie'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  config: {}
}
cjs.resolve {
  source: [32m'react-cookie'[39m,
  file: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  options: {}
}
looking for: react-cookie
tsconfig v /Users/paris/parisbre56/eslint_test
configLoader {
  cwd: [32m'/Users/paris/parisbre56/eslint_test'[39m,
  explicitParams: [90mundefined[39m,
  tsConfigLoader: [36m[Function: tsConfigLoader][39m
}
failed to init tsconfig-paths: Couldn't find tsconfig.json
cjs.resolve {
  source: [32m'@types/react-cookie'[39m,
  file: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  options: {}
}
looking for: @types/react-cookie
didn't find  @types/react-cookie
matched node path: /Users/paris/parisbre56/eslint_test/node_modules/react-cookie/es6/index.js
resolved {
  found: [33mtrue[39m,
  path: [32m'/Users/paris/parisbre56/eslint_test/node_modules/react-cookie/es6/index.js'[39m
}
typeTest react-cookie {
  id: [32m'import/order'[39m,
  options: [
    {
      [32m'newlines-between'[39m: [32m'always'[39m,
      groups: [36m[Array][39m,
      warnOnUnassignedImports: [33mfalse[39m
    }
  ],
  report: [36m[Function: report][39m
} /Users/paris/parisbre56/eslint_test/node_modules/react-cookie/es6/index.js
internalScope [90mundefined[39m
path node_modules/react-cookie/es6/index.js
relativePath react-cookie/es6/index.js
externalPath
fullResolve {
  modulePath: [32m'react-cookie'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  settings: {
    [32m'import/resolver'[39m: {
      typescript: {},
      node: [36m[Object][39m,
      [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m: [36m[Object][39m,
      [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m: [36m[Object][39m
    },
    [32m'import/parsers'[39m: {
      [32m'@typescript-eslint/parser'[39m: [36m[Array][39m,
      [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-config-next/node_modules/@typescript-eslint/parser/dist/index.js'[39m: [36m[Array][39m
    },
    [32m'import/extensions'[39m: [ [32m'.js'[39m, [32m'.mjs'[39m, [32m'.jsx'[39m, [32m'.ts'[39m, [32m'.tsx'[39m, [32m'.d.ts'[39m ],
    [32m'import/external-module-folders'[39m: [ [32m'node_modules'[39m, [32m'node_modules/@types'[39m ],
    react: { version: [32m'detect'[39m },
    [32m'import/core-modules'[39m: [],
    [32m'import/ignore'[39m: [ [32m'node_modules'[39m, [32m'\\.(coffee|scss|css|less|hbs|svg|json)$'[39m ]
  }
}
configResolvers {
  typescript: {},
  node: { extensions: [ [32m'.ts'[39m, [32m'.tsx'[39m, [32m'.json'[39m, [32m'.ts'[39m, [32m'.d.ts'[39m ] },
  [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m: { extensions: [ [32m'.js'[39m, [32m'.jsx'[39m, [32m'.ts'[39m, [32m'.tsx'[39m ] },
  [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m: { alwaysTryTypes: [33mtrue[39m }
}
resolvers Map(4) {
  [32m'typescript'[39m => {},
  [32m'node'[39m => { extensions: [ [32m'.ts'[39m, [32m'.tsx'[39m, [32m'.json'[39m, [32m'.ts'[39m, [32m'.d.ts'[39m ] },
  [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m => { extensions: [ [32m'.js'[39m, [32m'.jsx'[39m, [32m'.ts'[39m, [32m'.tsx'[39m ] },
  [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m => { alwaysTryTypes: [33mtrue[39m }
}
resolver pair {
  name: [32m'typescript'[39m,
  config: {},
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
requireResolver {
  name: [32m'typescript'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
tryRequire {
  target: [32m'eslint-import-resolver-typescript'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
(end) tryRequire: module found, trying to load
(end) requireResolver: loaded resolver { interfaceVersion: [33m2[39m, resolve: [36m[Function: resolve][39m }
withResolver {
  resolver: { interfaceVersion: [33m2[39m, resolve: [36m[Function: resolve][39m },
  config: {}
}
v2 {
  resolver: { interfaceVersion: [33m2[39m, resolve: [36m[Function: resolve][39m },
  resolve: [36m[Function: resolve][39m,
  modulePath: [32m'react-cookie'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  config: {}
}
cjs.resolve {
  source: [32m'react-cookie'[39m,
  file: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  options: {}
}
looking for: react-cookie
cjs.resolve {
  source: [32m'@types/react-cookie'[39m,
  file: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  options: {}
}
looking for: @types/react-cookie
didn't find  @types/react-cookie
matched node path: /Users/paris/parisbre56/eslint_test/node_modules/react-cookie/es6/index.js
resolved {
  found: [33mtrue[39m,
  path: [32m'/Users/paris/parisbre56/eslint_test/node_modules/react-cookie/es6/index.js'[39m
}
fullResolve {
  modulePath: [32m'react-cookie'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  settings: {
    [32m'import/resolver'[39m: {
      typescript: {},
      node: [36m[Object][39m,
      [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m: [36m[Object][39m,
      [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m: [36m[Object][39m
    },
    [32m'import/parsers'[39m: {
      [32m'@typescript-eslint/parser'[39m: [36m[Array][39m,
      [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-config-next/node_modules/@typescript-eslint/parser/dist/index.js'[39m: [36m[Array][39m
    },
    [32m'import/extensions'[39m: [ [32m'.js'[39m, [32m'.mjs'[39m, [32m'.jsx'[39m, [32m'.ts'[39m, [32m'.tsx'[39m, [32m'.d.ts'[39m ],
    [32m'import/external-module-folders'[39m: [ [32m'node_modules'[39m, [32m'node_modules/@types'[39m ],
    react: { version: [32m'detect'[39m },
    [32m'import/core-modules'[39m: [],
    [32m'import/ignore'[39m: [ [32m'node_modules'[39m, [32m'\\.(coffee|scss|css|less|hbs|svg|json)$'[39m ]
  }
}
configResolvers {
  typescript: {},
  node: { extensions: [ [32m'.ts'[39m, [32m'.tsx'[39m, [32m'.json'[39m, [32m'.ts'[39m, [32m'.d.ts'[39m ] },
  [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m: { extensions: [ [32m'.js'[39m, [32m'.jsx'[39m, [32m'.ts'[39m, [32m'.tsx'[39m ] },
  [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m: { alwaysTryTypes: [33mtrue[39m }
}
resolvers Map(4) {
  [32m'typescript'[39m => {},
  [32m'node'[39m => { extensions: [ [32m'.ts'[39m, [32m'.tsx'[39m, [32m'.json'[39m, [32m'.ts'[39m, [32m'.d.ts'[39m ] },
  [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m => { extensions: [ [32m'.js'[39m, [32m'.jsx'[39m, [32m'.ts'[39m, [32m'.tsx'[39m ] },
  [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m => { alwaysTryTypes: [33mtrue[39m }
}
resolver pair {
  name: [32m'typescript'[39m,
  config: {},
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
requireResolver {
  name: [32m'typescript'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
tryRequire {
  target: [32m'eslint-import-resolver-typescript'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
(end) tryRequire: module found, trying to load
(end) requireResolver: loaded resolver { interfaceVersion: [33m2[39m, resolve: [36m[Function: resolve][39m }
withResolver {
  resolver: { interfaceVersion: [33m2[39m, resolve: [36m[Function: resolve][39m },
  config: {}
}
v2 {
  resolver: { interfaceVersion: [33m2[39m, resolve: [36m[Function: resolve][39m },
  resolve: [36m[Function: resolve][39m,
  modulePath: [32m'react-cookie'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  config: {}
}
cjs.resolve {
  source: [32m'react-cookie'[39m,
  file: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  options: {}
}
looking for: react-cookie
cjs.resolve {
  source: [32m'@types/react-cookie'[39m,
  file: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  options: {}
}
looking for: @types/react-cookie
didn't find  @types/react-cookie
matched node path: /Users/paris/parisbre56/eslint_test/node_modules/react-cookie/es6/index.js
resolved {
  found: [33mtrue[39m,
  path: [32m'/Users/paris/parisbre56/eslint_test/node_modules/react-cookie/es6/index.js'[39m
}
fullResolve {
  modulePath: [32m'react-cookie'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  settings: {
    [32m'import/resolver'[39m: {
      typescript: {},
      node: [36m[Object][39m,
      [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m: [36m[Object][39m,
      [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m: [36m[Object][39m
    },
    [32m'import/parsers'[39m: {
      [32m'@typescript-eslint/parser'[39m: [36m[Array][39m,
      [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-config-next/node_modules/@typescript-eslint/parser/dist/index.js'[39m: [36m[Array][39m
    },
    [32m'import/extensions'[39m: [ [32m'.js'[39m, [32m'.mjs'[39m, [32m'.jsx'[39m, [32m'.ts'[39m, [32m'.tsx'[39m, [32m'.d.ts'[39m ],
    [32m'import/external-module-folders'[39m: [ [32m'node_modules'[39m, [32m'node_modules/@types'[39m ],
    react: { version: [32m'detect'[39m },
    [32m'import/core-modules'[39m: [],
    [32m'import/ignore'[39m: [ [32m'node_modules'[39m, [32m'\\.(coffee|scss|css|less|hbs|svg|json)$'[39m ]
  }
}
configResolvers {
  typescript: {},
  node: { extensions: [ [32m'.ts'[39m, [32m'.tsx'[39m, [32m'.json'[39m, [32m'.ts'[39m, [32m'.d.ts'[39m ] },
  [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m: { extensions: [ [32m'.js'[39m, [32m'.jsx'[39m, [32m'.ts'[39m, [32m'.tsx'[39m ] },
  [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m: { alwaysTryTypes: [33mtrue[39m }
}
resolvers Map(4) {
  [32m'typescript'[39m => {},
  [32m'node'[39m => { extensions: [ [32m'.ts'[39m, [32m'.tsx'[39m, [32m'.json'[39m, [32m'.ts'[39m, [32m'.d.ts'[39m ] },
  [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m => { extensions: [ [32m'.js'[39m, [32m'.jsx'[39m, [32m'.ts'[39m, [32m'.tsx'[39m ] },
  [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m => { alwaysTryTypes: [33mtrue[39m }
}
resolver pair {
  name: [32m'typescript'[39m,
  config: {},
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
requireResolver {
  name: [32m'typescript'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
tryRequire {
  target: [32m'eslint-import-resolver-typescript'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
(end) tryRequire: module found, trying to load
(end) requireResolver: loaded resolver { interfaceVersion: [33m2[39m, resolve: [36m[Function: resolve][39m }
withResolver {
  resolver: { interfaceVersion: [33m2[39m, resolve: [36m[Function: resolve][39m },
  config: {}
}
v2 {
  resolver: { interfaceVersion: [33m2[39m, resolve: [36m[Function: resolve][39m },
  resolve: [36m[Function: resolve][39m,
  modulePath: [32m'react-cookie'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  config: {}
}
cjs.resolve {
  source: [32m'react-cookie'[39m,
  file: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  options: {}
}
looking for: react-cookie
cjs.resolve {
  source: [32m'@types/react-cookie'[39m,
  file: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  options: {}
}
looking for: @types/react-cookie
didn't find  @types/react-cookie
matched node path: /Users/paris/parisbre56/eslint_test/node_modules/react-cookie/es6/index.js
resolved {
  found: [33mtrue[39m,
  path: [32m'/Users/paris/parisbre56/eslint_test/node_modules/react-cookie/es6/index.js'[39m
}
resolverFunction [Function: resolve] { relative: [36m[Function: relative][39m }
fullResolve {
  modulePath: [32m'react-cookie'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  settings: {
    [32m'import/resolver'[39m: {
      typescript: {},
      node: [36m[Object][39m,
      [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m: [36m[Object][39m,
      [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m: [36m[Object][39m
    },
    [32m'import/parsers'[39m: {
      [32m'@typescript-eslint/parser'[39m: [36m[Array][39m,
      [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-config-next/node_modules/@typescript-eslint/parser/dist/index.js'[39m: [36m[Array][39m
    },
    [32m'import/extensions'[39m: [ [32m'.js'[39m, [32m'.mjs'[39m, [32m'.jsx'[39m, [32m'.ts'[39m, [32m'.tsx'[39m, [32m'.d.ts'[39m ],
    [32m'import/external-module-folders'[39m: [ [32m'node_modules'[39m, [32m'node_modules/@types'[39m ],
    react: { version: [32m'detect'[39m },
    [32m'import/core-modules'[39m: [],
    [32m'import/ignore'[39m: [ [32m'node_modules'[39m, [32m'\\.(coffee|scss|css|less|hbs|svg|json)$'[39m ]
  }
}
configResolvers {
  typescript: {},
  node: { extensions: [ [32m'.ts'[39m, [32m'.tsx'[39m, [32m'.json'[39m, [32m'.ts'[39m, [32m'.d.ts'[39m ] },
  [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m: { extensions: [ [32m'.js'[39m, [32m'.jsx'[39m, [32m'.ts'[39m, [32m'.tsx'[39m ] },
  [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m: { alwaysTryTypes: [33mtrue[39m }
}
resolvers Map(4) {
  [32m'typescript'[39m => {},
  [32m'node'[39m => { extensions: [ [32m'.ts'[39m, [32m'.tsx'[39m, [32m'.json'[39m, [32m'.ts'[39m, [32m'.d.ts'[39m ] },
  [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m => { extensions: [ [32m'.js'[39m, [32m'.jsx'[39m, [32m'.ts'[39m, [32m'.tsx'[39m ] },
  [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m => { alwaysTryTypes: [33mtrue[39m }
}
resolver pair {
  name: [32m'typescript'[39m,
  config: {},
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
requireResolver {
  name: [32m'typescript'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
tryRequire {
  target: [32m'eslint-import-resolver-typescript'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
(end) tryRequire: module found, trying to load
(end) requireResolver: loaded resolver { interfaceVersion: [33m2[39m, resolve: [36m[Function: resolve][39m }
withResolver {
  resolver: { interfaceVersion: [33m2[39m, resolve: [36m[Function: resolve][39m },
  config: {}
}
v2 {
  resolver: { interfaceVersion: [33m2[39m, resolve: [36m[Function: resolve][39m },
  resolve: [36m[Function: resolve][39m,
  modulePath: [32m'react-cookie'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  config: {}
}
cjs.resolve {
  source: [32m'react-cookie'[39m,
  file: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  options: {}
}
looking for: react-cookie
cjs.resolve {
  source: [32m'@types/react-cookie'[39m,
  file: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  options: {}
}
looking for: @types/react-cookie
didn't find  @types/react-cookie
matched node path: /Users/paris/parisbre56/eslint_test/node_modules/react-cookie/es6/index.js
resolved {
  found: [33mtrue[39m,
  path: [32m'/Users/paris/parisbre56/eslint_test/node_modules/react-cookie/es6/index.js'[39m
}
typeTest react-cookie {
  id: [32m'import/no-relative-packages'[39m,
  options: [],
  report: [36m[Function: report][39m
} /Users/paris/parisbre56/eslint_test/node_modules/react-cookie/es6/index.js
internalScope [90mundefined[39m
path node_modules/react-cookie/es6/index.js
relativePath react-cookie/es6/index.js
externalPath
resolverFunction [Function: resolve] { relative: [36m[Function: relative][39m }
fullResolve {
  modulePath: [32m'react'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  settings: {
    [32m'import/resolver'[39m: {
      typescript: {},
      node: [36m[Object][39m,
      [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m: [36m[Object][39m,
      [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m: [36m[Object][39m
    },
    [32m'import/parsers'[39m: {
      [32m'@typescript-eslint/parser'[39m: [36m[Array][39m,
      [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-config-next/node_modules/@typescript-eslint/parser/dist/index.js'[39m: [36m[Array][39m
    },
    [32m'import/extensions'[39m: [ [32m'.js'[39m, [32m'.mjs'[39m, [32m'.jsx'[39m, [32m'.ts'[39m, [32m'.tsx'[39m, [32m'.d.ts'[39m ],
    [32m'import/external-module-folders'[39m: [ [32m'node_modules'[39m, [32m'node_modules/@types'[39m ],
    react: { version: [32m'detect'[39m },
    [32m'import/core-modules'[39m: [],
    [32m'import/ignore'[39m: [ [32m'node_modules'[39m, [32m'\\.(coffee|scss|css|less|hbs|svg|json)$'[39m ]
  }
}
configResolvers {
  typescript: {},
  node: { extensions: [ [32m'.ts'[39m, [32m'.tsx'[39m, [32m'.json'[39m, [32m'.ts'[39m, [32m'.d.ts'[39m ] },
  [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m: { extensions: [ [32m'.js'[39m, [32m'.jsx'[39m, [32m'.ts'[39m, [32m'.tsx'[39m ] },
  [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m: { alwaysTryTypes: [33mtrue[39m }
}
resolvers Map(4) {
  [32m'typescript'[39m => {},
  [32m'node'[39m => { extensions: [ [32m'.ts'[39m, [32m'.tsx'[39m, [32m'.json'[39m, [32m'.ts'[39m, [32m'.d.ts'[39m ] },
  [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m => { extensions: [ [32m'.js'[39m, [32m'.jsx'[39m, [32m'.ts'[39m, [32m'.tsx'[39m ] },
  [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m => { alwaysTryTypes: [33mtrue[39m }
}
resolver pair {
  name: [32m'typescript'[39m,
  config: {},
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
requireResolver {
  name: [32m'typescript'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
tryRequire {
  target: [32m'eslint-import-resolver-typescript'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
(end) tryRequire: module found, trying to load
(end) requireResolver: loaded resolver { interfaceVersion: [33m2[39m, resolve: [36m[Function: resolve][39m }
withResolver {
  resolver: { interfaceVersion: [33m2[39m, resolve: [36m[Function: resolve][39m },
  config: {}
}
v2 {
  resolver: { interfaceVersion: [33m2[39m, resolve: [36m[Function: resolve][39m },
  resolve: [36m[Function: resolve][39m,
  modulePath: [32m'react'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  config: {}
}
cjs.resolve {
  source: [32m'react'[39m,
  file: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  options: {}
}
looking for: react
cjs.resolve {
  source: [32m'@types/react'[39m,
  file: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  options: {}
}
looking for: @types/react
matched node path: /Users/paris/parisbre56/eslint_test/node_modules/@types/react/index.d.ts
resolved {
  found: [33mtrue[39m,
  path: [32m'/Users/paris/parisbre56/eslint_test/node_modules/@types/react/index.d.ts'[39m
}
typeTest react {
  id: [32m'import/order'[39m,
  options: [
    {
      [32m'newlines-between'[39m: [32m'always'[39m,
      groups: [36m[Array][39m,
      warnOnUnassignedImports: [33mfalse[39m
    }
  ],
  report: [36m[Function: report][39m
} /Users/paris/parisbre56/eslint_test/node_modules/@types/react/index.d.ts
internalScope [90mundefined[39m
path node_modules/@types/react/index.d.ts
relativePath @types/react/index.d.ts
externalPath
fullResolve {
  modulePath: [32m'react'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  settings: {
    [32m'import/resolver'[39m: {
      typescript: {},
      node: [36m[Object][39m,
      [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m: [36m[Object][39m,
      [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m: [36m[Object][39m
    },
    [32m'import/parsers'[39m: {
      [32m'@typescript-eslint/parser'[39m: [36m[Array][39m,
      [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-config-next/node_modules/@typescript-eslint/parser/dist/index.js'[39m: [36m[Array][39m
    },
    [32m'import/extensions'[39m: [ [32m'.js'[39m, [32m'.mjs'[39m, [32m'.jsx'[39m, [32m'.ts'[39m, [32m'.tsx'[39m, [32m'.d.ts'[39m ],
    [32m'import/external-module-folders'[39m: [ [32m'node_modules'[39m, [32m'node_modules/@types'[39m ],
    react: { version: [32m'detect'[39m },
    [32m'import/core-modules'[39m: [],
    [32m'import/ignore'[39m: [ [32m'node_modules'[39m, [32m'\\.(coffee|scss|css|less|hbs|svg|json)$'[39m ]
  }
}
configResolvers {
  typescript: {},
  node: { extensions: [ [32m'.ts'[39m, [32m'.tsx'[39m, [32m'.json'[39m, [32m'.ts'[39m, [32m'.d.ts'[39m ] },
  [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m: { extensions: [ [32m'.js'[39m, [32m'.jsx'[39m, [32m'.ts'[39m, [32m'.tsx'[39m ] },
  [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m: { alwaysTryTypes: [33mtrue[39m }
}
resolvers Map(4) {
  [32m'typescript'[39m => {},
  [32m'node'[39m => { extensions: [ [32m'.ts'[39m, [32m'.tsx'[39m, [32m'.json'[39m, [32m'.ts'[39m, [32m'.d.ts'[39m ] },
  [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m => { extensions: [ [32m'.js'[39m, [32m'.jsx'[39m, [32m'.ts'[39m, [32m'.tsx'[39m ] },
  [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m => { alwaysTryTypes: [33mtrue[39m }
}
resolver pair {
  name: [32m'typescript'[39m,
  config: {},
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
requireResolver {
  name: [32m'typescript'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
tryRequire {
  target: [32m'eslint-import-resolver-typescript'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
(end) tryRequire: module found, trying to load
(end) requireResolver: loaded resolver { interfaceVersion: [33m2[39m, resolve: [36m[Function: resolve][39m }
withResolver {
  resolver: { interfaceVersion: [33m2[39m, resolve: [36m[Function: resolve][39m },
  config: {}
}
v2 {
  resolver: { interfaceVersion: [33m2[39m, resolve: [36m[Function: resolve][39m },
  resolve: [36m[Function: resolve][39m,
  modulePath: [32m'react'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  config: {}
}
cjs.resolve {
  source: [32m'react'[39m,
  file: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  options: {}
}
looking for: react
cjs.resolve {
  source: [32m'@types/react'[39m,
  file: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  options: {}
}
looking for: @types/react
matched node path: /Users/paris/parisbre56/eslint_test/node_modules/@types/react/index.d.ts
resolved {
  found: [33mtrue[39m,
  path: [32m'/Users/paris/parisbre56/eslint_test/node_modules/@types/react/index.d.ts'[39m
}
fullResolve {
  modulePath: [32m'react'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  settings: {
    [32m'import/resolver'[39m: {
      typescript: {},
      node: [36m[Object][39m,
      [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m: [36m[Object][39m,
      [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m: [36m[Object][39m
    },
    [32m'import/parsers'[39m: {
      [32m'@typescript-eslint/parser'[39m: [36m[Array][39m,
      [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-config-next/node_modules/@typescript-eslint/parser/dist/index.js'[39m: [36m[Array][39m
    },
    [32m'import/extensions'[39m: [ [32m'.js'[39m, [32m'.mjs'[39m, [32m'.jsx'[39m, [32m'.ts'[39m, [32m'.tsx'[39m, [32m'.d.ts'[39m ],
    [32m'import/external-module-folders'[39m: [ [32m'node_modules'[39m, [32m'node_modules/@types'[39m ],
    react: { version: [32m'detect'[39m },
    [32m'import/core-modules'[39m: [],
    [32m'import/ignore'[39m: [ [32m'node_modules'[39m, [32m'\\.(coffee|scss|css|less|hbs|svg|json)$'[39m ]
  }
}
configResolvers {
  typescript: {},
  node: { extensions: [ [32m'.ts'[39m, [32m'.tsx'[39m, [32m'.json'[39m, [32m'.ts'[39m, [32m'.d.ts'[39m ] },
  [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m: { extensions: [ [32m'.js'[39m, [32m'.jsx'[39m, [32m'.ts'[39m, [32m'.tsx'[39m ] },
  [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m: { alwaysTryTypes: [33mtrue[39m }
}
resolvers Map(4) {
  [32m'typescript'[39m => {},
  [32m'node'[39m => { extensions: [ [32m'.ts'[39m, [32m'.tsx'[39m, [32m'.json'[39m, [32m'.ts'[39m, [32m'.d.ts'[39m ] },
  [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m => { extensions: [ [32m'.js'[39m, [32m'.jsx'[39m, [32m'.ts'[39m, [32m'.tsx'[39m ] },
  [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m => { alwaysTryTypes: [33mtrue[39m }
}
resolver pair {
  name: [32m'typescript'[39m,
  config: {},
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
requireResolver {
  name: [32m'typescript'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
tryRequire {
  target: [32m'eslint-import-resolver-typescript'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
(end) tryRequire: module found, trying to load
(end) requireResolver: loaded resolver { interfaceVersion: [33m2[39m, resolve: [36m[Function: resolve][39m }
withResolver {
  resolver: { interfaceVersion: [33m2[39m, resolve: [36m[Function: resolve][39m },
  config: {}
}
v2 {
  resolver: { interfaceVersion: [33m2[39m, resolve: [36m[Function: resolve][39m },
  resolve: [36m[Function: resolve][39m,
  modulePath: [32m'react'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  config: {}
}
cjs.resolve {
  source: [32m'react'[39m,
  file: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  options: {}
}
looking for: react
cjs.resolve {
  source: [32m'@types/react'[39m,
  file: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  options: {}
}
looking for: @types/react
matched node path: /Users/paris/parisbre56/eslint_test/node_modules/@types/react/index.d.ts
resolved {
  found: [33mtrue[39m,
  path: [32m'/Users/paris/parisbre56/eslint_test/node_modules/@types/react/index.d.ts'[39m
}
fullResolve {
  modulePath: [32m'react'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  settings: {
    [32m'import/resolver'[39m: {
      typescript: {},
      node: [36m[Object][39m,
      [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m: [36m[Object][39m,
      [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m: [36m[Object][39m
    },
    [32m'import/parsers'[39m: {
      [32m'@typescript-eslint/parser'[39m: [36m[Array][39m,
      [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-config-next/node_modules/@typescript-eslint/parser/dist/index.js'[39m: [36m[Array][39m
    },
    [32m'import/extensions'[39m: [ [32m'.js'[39m, [32m'.mjs'[39m, [32m'.jsx'[39m, [32m'.ts'[39m, [32m'.tsx'[39m, [32m'.d.ts'[39m ],
    [32m'import/external-module-folders'[39m: [ [32m'node_modules'[39m, [32m'node_modules/@types'[39m ],
    react: { version: [32m'detect'[39m },
    [32m'import/core-modules'[39m: [],
    [32m'import/ignore'[39m: [ [32m'node_modules'[39m, [32m'\\.(coffee|scss|css|less|hbs|svg|json)$'[39m ]
  }
}
configResolvers {
  typescript: {},
  node: { extensions: [ [32m'.ts'[39m, [32m'.tsx'[39m, [32m'.json'[39m, [32m'.ts'[39m, [32m'.d.ts'[39m ] },
  [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m: { extensions: [ [32m'.js'[39m, [32m'.jsx'[39m, [32m'.ts'[39m, [32m'.tsx'[39m ] },
  [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m: { alwaysTryTypes: [33mtrue[39m }
}
resolvers Map(4) {
  [32m'typescript'[39m => {},
  [32m'node'[39m => { extensions: [ [32m'.ts'[39m, [32m'.tsx'[39m, [32m'.json'[39m, [32m'.ts'[39m, [32m'.d.ts'[39m ] },
  [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m => { extensions: [ [32m'.js'[39m, [32m'.jsx'[39m, [32m'.ts'[39m, [32m'.tsx'[39m ] },
  [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m => { alwaysTryTypes: [33mtrue[39m }
}
resolver pair {
  name: [32m'typescript'[39m,
  config: {},
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
requireResolver {
  name: [32m'typescript'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
tryRequire {
  target: [32m'eslint-import-resolver-typescript'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
(end) tryRequire: module found, trying to load
(end) requireResolver: loaded resolver { interfaceVersion: [33m2[39m, resolve: [36m[Function: resolve][39m }
withResolver {
  resolver: { interfaceVersion: [33m2[39m, resolve: [36m[Function: resolve][39m },
  config: {}
}
v2 {
  resolver: { interfaceVersion: [33m2[39m, resolve: [36m[Function: resolve][39m },
  resolve: [36m[Function: resolve][39m,
  modulePath: [32m'react'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  config: {}
}
cjs.resolve {
  source: [32m'react'[39m,
  file: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  options: {}
}
looking for: react
cjs.resolve {
  source: [32m'@types/react'[39m,
  file: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  options: {}
}
looking for: @types/react
matched node path: /Users/paris/parisbre56/eslint_test/node_modules/@types/react/index.d.ts
resolved {
  found: [33mtrue[39m,
  path: [32m'/Users/paris/parisbre56/eslint_test/node_modules/@types/react/index.d.ts'[39m
}
resolverFunction [Function: resolve] { relative: [36m[Function: relative][39m }
fullResolve {
  modulePath: [32m'react'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  settings: {
    [32m'import/resolver'[39m: {
      typescript: {},
      node: [36m[Object][39m,
      [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m: [36m[Object][39m,
      [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m: [36m[Object][39m
    },
    [32m'import/parsers'[39m: {
      [32m'@typescript-eslint/parser'[39m: [36m[Array][39m,
      [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-config-next/node_modules/@typescript-eslint/parser/dist/index.js'[39m: [36m[Array][39m
    },
    [32m'import/extensions'[39m: [ [32m'.js'[39m, [32m'.mjs'[39m, [32m'.jsx'[39m, [32m'.ts'[39m, [32m'.tsx'[39m, [32m'.d.ts'[39m ],
    [32m'import/external-module-folders'[39m: [ [32m'node_modules'[39m, [32m'node_modules/@types'[39m ],
    react: { version: [32m'detect'[39m },
    [32m'import/core-modules'[39m: [],
    [32m'import/ignore'[39m: [ [32m'node_modules'[39m, [32m'\\.(coffee|scss|css|less|hbs|svg|json)$'[39m ]
  }
}
configResolvers {
  typescript: {},
  node: { extensions: [ [32m'.ts'[39m, [32m'.tsx'[39m, [32m'.json'[39m, [32m'.ts'[39m, [32m'.d.ts'[39m ] },
  [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m: { extensions: [ [32m'.js'[39m, [32m'.jsx'[39m, [32m'.ts'[39m, [32m'.tsx'[39m ] },
  [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m: { alwaysTryTypes: [33mtrue[39m }
}
resolvers Map(4) {
  [32m'typescript'[39m => {},
  [32m'node'[39m => { extensions: [ [32m'.ts'[39m, [32m'.tsx'[39m, [32m'.json'[39m, [32m'.ts'[39m, [32m'.d.ts'[39m ] },
  [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m => { extensions: [ [32m'.js'[39m, [32m'.jsx'[39m, [32m'.ts'[39m, [32m'.tsx'[39m ] },
  [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m => { alwaysTryTypes: [33mtrue[39m }
}
resolver pair {
  name: [32m'typescript'[39m,
  config: {},
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
requireResolver {
  name: [32m'typescript'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
tryRequire {
  target: [32m'eslint-import-resolver-typescript'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
(end) tryRequire: module found, trying to load
(end) requireResolver: loaded resolver { interfaceVersion: [33m2[39m, resolve: [36m[Function: resolve][39m }
withResolver {
  resolver: { interfaceVersion: [33m2[39m, resolve: [36m[Function: resolve][39m },
  config: {}
}
v2 {
  resolver: { interfaceVersion: [33m2[39m, resolve: [36m[Function: resolve][39m },
  resolve: [36m[Function: resolve][39m,
  modulePath: [32m'react'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  config: {}
}
cjs.resolve {
  source: [32m'react'[39m,
  file: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  options: {}
}
looking for: react
cjs.resolve {
  source: [32m'@types/react'[39m,
  file: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  options: {}
}
looking for: @types/react
matched node path: /Users/paris/parisbre56/eslint_test/node_modules/@types/react/index.d.ts
resolved {
  found: [33mtrue[39m,
  path: [32m'/Users/paris/parisbre56/eslint_test/node_modules/@types/react/index.d.ts'[39m
}
typeTest react {
  id: [32m'import/no-relative-packages'[39m,
  options: [],
  report: [36m[Function: report][39m
} /Users/paris/parisbre56/eslint_test/node_modules/@types/react/index.d.ts
internalScope [90mundefined[39m
path node_modules/@types/react/index.d.ts
relativePath @types/react/index.d.ts
externalPath
resolverFunction [Function: resolve] { relative: [36m[Function: relative][39m }
fullResolve {
  modulePath: [32m'@testlib/sublib'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  settings: {
    [32m'import/resolver'[39m: {
      typescript: {},
      node: [36m[Object][39m,
      [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m: [36m[Object][39m,
      [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m: [36m[Object][39m
    },
    [32m'import/parsers'[39m: {
      [32m'@typescript-eslint/parser'[39m: [36m[Array][39m,
      [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-config-next/node_modules/@typescript-eslint/parser/dist/index.js'[39m: [36m[Array][39m
    },
    [32m'import/extensions'[39m: [ [32m'.js'[39m, [32m'.mjs'[39m, [32m'.jsx'[39m, [32m'.ts'[39m, [32m'.tsx'[39m, [32m'.d.ts'[39m ],
    [32m'import/external-module-folders'[39m: [ [32m'node_modules'[39m, [32m'node_modules/@types'[39m ],
    react: { version: [32m'detect'[39m },
    [32m'import/core-modules'[39m: [],
    [32m'import/ignore'[39m: [ [32m'node_modules'[39m, [32m'\\.(coffee|scss|css|less|hbs|svg|json)$'[39m ]
  }
}
configResolvers {
  typescript: {},
  node: { extensions: [ [32m'.ts'[39m, [32m'.tsx'[39m, [32m'.json'[39m, [32m'.ts'[39m, [32m'.d.ts'[39m ] },
  [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m: { extensions: [ [32m'.js'[39m, [32m'.jsx'[39m, [32m'.ts'[39m, [32m'.tsx'[39m ] },
  [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m: { alwaysTryTypes: [33mtrue[39m }
}
resolvers Map(4) {
  [32m'typescript'[39m => {},
  [32m'node'[39m => { extensions: [ [32m'.ts'[39m, [32m'.tsx'[39m, [32m'.json'[39m, [32m'.ts'[39m, [32m'.d.ts'[39m ] },
  [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m => { extensions: [ [32m'.js'[39m, [32m'.jsx'[39m, [32m'.ts'[39m, [32m'.tsx'[39m ] },
  [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m => { alwaysTryTypes: [33mtrue[39m }
}
resolver pair {
  name: [32m'typescript'[39m,
  config: {},
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
requireResolver {
  name: [32m'typescript'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
tryRequire {
  target: [32m'eslint-import-resolver-typescript'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
(end) tryRequire: module found, trying to load
(end) requireResolver: loaded resolver { interfaceVersion: [33m2[39m, resolve: [36m[Function: resolve][39m }
withResolver {
  resolver: { interfaceVersion: [33m2[39m, resolve: [36m[Function: resolve][39m },
  config: {}
}
v2 {
  resolver: { interfaceVersion: [33m2[39m, resolve: [36m[Function: resolve][39m },
  resolve: [36m[Function: resolve][39m,
  modulePath: [32m'@testlib/sublib'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  config: {}
}
cjs.resolve {
  source: [32m'@testlib/sublib'[39m,
  file: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  options: {}
}
looking for: @testlib/sublib
didn't find  @testlib/sublib
not resolved
resolver pair {
  name: [32m'node'[39m,
  config: { extensions: [ [32m'.ts'[39m, [32m'.tsx'[39m, [32m'.json'[39m, [32m'.ts'[39m, [32m'.d.ts'[39m ] },
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
requireResolver {
  name: [32m'node'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
tryRequire {
  target: [32m'eslint-import-resolver-node'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
(end) tryRequire: module found, trying to load
(end) requireResolver: loaded resolver { interfaceVersion: [33m2[39m, resolve: [36m[Function (anonymous)][39m }
withResolver {
  resolver: { interfaceVersion: [33m2[39m, resolve: [36m[Function (anonymous)][39m },
  config: { extensions: [ [32m'.ts'[39m, [32m'.tsx'[39m, [32m'.json'[39m, [32m'.ts'[39m, [32m'.d.ts'[39m ] }
}
v2 {
  resolver: { interfaceVersion: [33m2[39m, resolve: [36m[Function (anonymous)][39m },
  resolve: [36m[Function (anonymous)][39m,
  modulePath: [32m'@testlib/sublib'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  config: { extensions: [ [32m'.ts'[39m, [32m'.tsx'[39m, [32m'.json'[39m, [32m'.ts'[39m, [32m'.d.ts'[39m ] }
}
not resolved
resolver pair {
  name: [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m,
  config: { extensions: [ [32m'.js'[39m, [32m'.jsx'[39m, [32m'.ts'[39m, [32m'.tsx'[39m ] },
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
requireResolver {
  name: [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
tryRequire {
  target: [32m'eslint-import-resolver-/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
(end) tryRequire: not found
tryRequire {
  target: [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
(end) tryRequire: module found, trying to load
(end) requireResolver: loaded resolver { interfaceVersion: [33m2[39m, resolve: [36m[Function (anonymous)][39m }
withResolver {
  resolver: { interfaceVersion: [33m2[39m, resolve: [36m[Function (anonymous)][39m },
  config: { extensions: [ [32m'.js'[39m, [32m'.jsx'[39m, [32m'.ts'[39m, [32m'.tsx'[39m ] }
}
v2 {
  resolver: { interfaceVersion: [33m2[39m, resolve: [36m[Function (anonymous)][39m },
  resolve: [36m[Function (anonymous)][39m,
  modulePath: [32m'@testlib/sublib'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  config: { extensions: [ [32m'.js'[39m, [32m'.jsx'[39m, [32m'.ts'[39m, [32m'.tsx'[39m ] }
}
not resolved
resolver pair {
  name: [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m,
  config: { alwaysTryTypes: [33mtrue[39m },
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
requireResolver {
  name: [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
tryRequire {
  target: [32m'eslint-import-resolver-/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
(end) tryRequire: not found
tryRequire {
  target: [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
(end) tryRequire: module found, trying to load
(end) requireResolver: loaded resolver { interfaceVersion: [33m2[39m, resolve: [36m[Function: resolve][39m }
withResolver {
  resolver: { interfaceVersion: [33m2[39m, resolve: [36m[Function: resolve][39m },
  config: { alwaysTryTypes: [33mtrue[39m }
}
v2 {
  resolver: { interfaceVersion: [33m2[39m, resolve: [36m[Function: resolve][39m },
  resolve: [36m[Function: resolve][39m,
  modulePath: [32m'@testlib/sublib'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  config: { alwaysTryTypes: [33mtrue[39m }
}
cjs.resolve {
  source: [32m'@testlib/sublib'[39m,
  file: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  options: { alwaysTryTypes: [33mtrue[39m }
}
looking for: @testlib/sublib
tsconfig v /Users/paris/parisbre56/eslint_test
configLoader {
  cwd: [32m'/Users/paris/parisbre56/eslint_test'[39m,
  explicitParams: [90mundefined[39m,
  tsConfigLoader: [36m[Function: tsConfigLoader][39m
}
failed to init tsconfig-paths: Couldn't find tsconfig.json
cjs.resolve {
  source: [32m'@types/testlib__sublib'[39m,
  file: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  options: { alwaysTryTypes: [33mtrue[39m }
}
looking for: @types/testlib__sublib
didn't find  @types/testlib__sublib
didn't find  @testlib/sublib
not resolved
typeTest @testlib/sublib {
  id: [32m'import/order'[39m,
  options: [
    {
      [32m'newlines-between'[39m: [32m'always'[39m,
      groups: [36m[Array][39m,
      warnOnUnassignedImports: [33mfalse[39m
    }
  ],
  report: [36m[Function: report][39m
} [90mundefined[39m
internalScope [90mundefined[39m
isModule [33mfalse[39m @testlib/sublib
isScoped [33mtrue[39m @testlib/sublib
externalName
fullResolve {
  modulePath: [32m'@testlib/sublib'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  settings: {
    [32m'import/resolver'[39m: {
      typescript: {},
      node: [36m[Object][39m,
      [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m: [36m[Object][39m,
      [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m: [36m[Object][39m
    },
    [32m'import/parsers'[39m: {
      [32m'@typescript-eslint/parser'[39m: [36m[Array][39m,
      [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-config-next/node_modules/@typescript-eslint/parser/dist/index.js'[39m: [36m[Array][39m
    },
    [32m'import/extensions'[39m: [ [32m'.js'[39m, [32m'.mjs'[39m, [32m'.jsx'[39m, [32m'.ts'[39m, [32m'.tsx'[39m, [32m'.d.ts'[39m ],
    [32m'import/external-module-folders'[39m: [ [32m'node_modules'[39m, [32m'node_modules/@types'[39m ],
    react: { version: [32m'detect'[39m },
    [32m'import/core-modules'[39m: [],
    [32m'import/ignore'[39m: [ [32m'node_modules'[39m, [32m'\\.(coffee|scss|css|less|hbs|svg|json)$'[39m ]
  }
}
configResolvers {
  typescript: {},
  node: { extensions: [ [32m'.ts'[39m, [32m'.tsx'[39m, [32m'.json'[39m, [32m'.ts'[39m, [32m'.d.ts'[39m ] },
  [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m: { extensions: [ [32m'.js'[39m, [32m'.jsx'[39m, [32m'.ts'[39m, [32m'.tsx'[39m ] },
  [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m: { alwaysTryTypes: [33mtrue[39m }
}
resolvers Map(4) {
  [32m'typescript'[39m => {},
  [32m'node'[39m => { extensions: [ [32m'.ts'[39m, [32m'.tsx'[39m, [32m'.json'[39m, [32m'.ts'[39m, [32m'.d.ts'[39m ] },
  [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m => { extensions: [ [32m'.js'[39m, [32m'.jsx'[39m, [32m'.ts'[39m, [32m'.tsx'[39m ] },
  [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m => { alwaysTryTypes: [33mtrue[39m }
}
resolver pair {
  name: [32m'typescript'[39m,
  config: {},
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
requireResolver {
  name: [32m'typescript'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
tryRequire {
  target: [32m'eslint-import-resolver-typescript'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
(end) tryRequire: module found, trying to load
(end) requireResolver: loaded resolver { interfaceVersion: [33m2[39m, resolve: [36m[Function: resolve][39m }
withResolver {
  resolver: { interfaceVersion: [33m2[39m, resolve: [36m[Function: resolve][39m },
  config: {}
}
v2 {
  resolver: { interfaceVersion: [33m2[39m, resolve: [36m[Function: resolve][39m },
  resolve: [36m[Function: resolve][39m,
  modulePath: [32m'@testlib/sublib'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  config: {}
}
cjs.resolve {
  source: [32m'@testlib/sublib'[39m,
  file: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  options: {}
}
looking for: @testlib/sublib
tsconfig v /Users/paris/parisbre56/eslint_test
configLoader {
  cwd: [32m'/Users/paris/parisbre56/eslint_test'[39m,
  explicitParams: [90mundefined[39m,
  tsConfigLoader: [36m[Function: tsConfigLoader][39m
}
failed to init tsconfig-paths: Couldn't find tsconfig.json
didn't find  @testlib/sublib
not resolved
resolver pair {
  name: [32m'node'[39m,
  config: { extensions: [ [32m'.ts'[39m, [32m'.tsx'[39m, [32m'.json'[39m, [32m'.ts'[39m, [32m'.d.ts'[39m ] },
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
requireResolver {
  name: [32m'node'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
tryRequire {
  target: [32m'eslint-import-resolver-node'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
(end) tryRequire: module found, trying to load
(end) requireResolver: loaded resolver { interfaceVersion: [33m2[39m, resolve: [36m[Function (anonymous)][39m }
withResolver {
  resolver: { interfaceVersion: [33m2[39m, resolve: [36m[Function (anonymous)][39m },
  config: { extensions: [ [32m'.ts'[39m, [32m'.tsx'[39m, [32m'.json'[39m, [32m'.ts'[39m, [32m'.d.ts'[39m ] }
}
v2 {
  resolver: { interfaceVersion: [33m2[39m, resolve: [36m[Function (anonymous)][39m },
  resolve: [36m[Function (anonymous)][39m,
  modulePath: [32m'@testlib/sublib'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  config: { extensions: [ [32m'.ts'[39m, [32m'.tsx'[39m, [32m'.json'[39m, [32m'.ts'[39m, [32m'.d.ts'[39m ] }
}
not resolved
resolver pair {
  name: [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m,
  config: { extensions: [ [32m'.js'[39m, [32m'.jsx'[39m, [32m'.ts'[39m, [32m'.tsx'[39m ] },
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
requireResolver {
  name: [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
tryRequire {
  target: [32m'eslint-import-resolver-/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
(end) tryRequire: not found
tryRequire {
  target: [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
(end) tryRequire: module found, trying to load
(end) requireResolver: loaded resolver { interfaceVersion: [33m2[39m, resolve: [36m[Function (anonymous)][39m }
withResolver {
  resolver: { interfaceVersion: [33m2[39m, resolve: [36m[Function (anonymous)][39m },
  config: { extensions: [ [32m'.js'[39m, [32m'.jsx'[39m, [32m'.ts'[39m, [32m'.tsx'[39m ] }
}
v2 {
  resolver: { interfaceVersion: [33m2[39m, resolve: [36m[Function (anonymous)][39m },
  resolve: [36m[Function (anonymous)][39m,
  modulePath: [32m'@testlib/sublib'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  config: { extensions: [ [32m'.js'[39m, [32m'.jsx'[39m, [32m'.ts'[39m, [32m'.tsx'[39m ] }
}
not resolved
resolver pair {
  name: [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m,
  config: { alwaysTryTypes: [33mtrue[39m },
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
requireResolver {
  name: [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
tryRequire {
  target: [32m'eslint-import-resolver-/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
(end) tryRequire: not found
tryRequire {
  target: [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
(end) tryRequire: module found, trying to load
(end) requireResolver: loaded resolver { interfaceVersion: [33m2[39m, resolve: [36m[Function: resolve][39m }
withResolver {
  resolver: { interfaceVersion: [33m2[39m, resolve: [36m[Function: resolve][39m },
  config: { alwaysTryTypes: [33mtrue[39m }
}
v2 {
  resolver: { interfaceVersion: [33m2[39m, resolve: [36m[Function: resolve][39m },
  resolve: [36m[Function: resolve][39m,
  modulePath: [32m'@testlib/sublib'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  config: { alwaysTryTypes: [33mtrue[39m }
}
cjs.resolve {
  source: [32m'@testlib/sublib'[39m,
  file: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  options: { alwaysTryTypes: [33mtrue[39m }
}
looking for: @testlib/sublib
tsconfig v /Users/paris/parisbre56/eslint_test
configLoader {
  cwd: [32m'/Users/paris/parisbre56/eslint_test'[39m,
  explicitParams: [90mundefined[39m,
  tsConfigLoader: [36m[Function: tsConfigLoader][39m
}
failed to init tsconfig-paths: Couldn't find tsconfig.json
cjs.resolve {
  source: [32m'@types/testlib__sublib'[39m,
  file: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  options: { alwaysTryTypes: [33mtrue[39m }
}
looking for: @types/testlib__sublib
didn't find  @types/testlib__sublib
didn't find  @testlib/sublib
not resolved
fullResolve {
  modulePath: [32m'@testlib/sublib'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  settings: {
    [32m'import/resolver'[39m: {
      typescript: {},
      node: [36m[Object][39m,
      [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m: [36m[Object][39m,
      [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m: [36m[Object][39m
    },
    [32m'import/parsers'[39m: {
      [32m'@typescript-eslint/parser'[39m: [36m[Array][39m,
      [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-config-next/node_modules/@typescript-eslint/parser/dist/index.js'[39m: [36m[Array][39m
    },
    [32m'import/extensions'[39m: [ [32m'.js'[39m, [32m'.mjs'[39m, [32m'.jsx'[39m, [32m'.ts'[39m, [32m'.tsx'[39m, [32m'.d.ts'[39m ],
    [32m'import/external-module-folders'[39m: [ [32m'node_modules'[39m, [32m'node_modules/@types'[39m ],
    react: { version: [32m'detect'[39m },
    [32m'import/core-modules'[39m: [],
    [32m'import/ignore'[39m: [ [32m'node_modules'[39m, [32m'\\.(coffee|scss|css|less|hbs|svg|json)$'[39m ]
  }
}
configResolvers {
  typescript: {},
  node: { extensions: [ [32m'.ts'[39m, [32m'.tsx'[39m, [32m'.json'[39m, [32m'.ts'[39m, [32m'.d.ts'[39m ] },
  [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m: { extensions: [ [32m'.js'[39m, [32m'.jsx'[39m, [32m'.ts'[39m, [32m'.tsx'[39m ] },
  [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m: { alwaysTryTypes: [33mtrue[39m }
}
resolvers Map(4) {
  [32m'typescript'[39m => {},
  [32m'node'[39m => { extensions: [ [32m'.ts'[39m, [32m'.tsx'[39m, [32m'.json'[39m, [32m'.ts'[39m, [32m'.d.ts'[39m ] },
  [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m => { extensions: [ [32m'.js'[39m, [32m'.jsx'[39m, [32m'.ts'[39m, [32m'.tsx'[39m ] },
  [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m => { alwaysTryTypes: [33mtrue[39m }
}
resolver pair {
  name: [32m'typescript'[39m,
  config: {},
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
requireResolver {
  name: [32m'typescript'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
tryRequire {
  target: [32m'eslint-import-resolver-typescript'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
(end) tryRequire: module found, trying to load
(end) requireResolver: loaded resolver { interfaceVersion: [33m2[39m, resolve: [36m[Function: resolve][39m }
withResolver {
  resolver: { interfaceVersion: [33m2[39m, resolve: [36m[Function: resolve][39m },
  config: {}
}
v2 {
  resolver: { interfaceVersion: [33m2[39m, resolve: [36m[Function: resolve][39m },
  resolve: [36m[Function: resolve][39m,
  modulePath: [32m'@testlib/sublib'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  config: {}
}
cjs.resolve {
  source: [32m'@testlib/sublib'[39m,
  file: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  options: {}
}
looking for: @testlib/sublib
tsconfig v /Users/paris/parisbre56/eslint_test
configLoader {
  cwd: [32m'/Users/paris/parisbre56/eslint_test'[39m,
  explicitParams: [90mundefined[39m,
  tsConfigLoader: [36m[Function: tsConfigLoader][39m
}
failed to init tsconfig-paths: Couldn't find tsconfig.json
didn't find  @testlib/sublib
not resolved
resolver pair {
  name: [32m'node'[39m,
  config: { extensions: [ [32m'.ts'[39m, [32m'.tsx'[39m, [32m'.json'[39m, [32m'.ts'[39m, [32m'.d.ts'[39m ] },
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
requireResolver {
  name: [32m'node'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
tryRequire {
  target: [32m'eslint-import-resolver-node'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
(end) tryRequire: module found, trying to load
(end) requireResolver: loaded resolver { interfaceVersion: [33m2[39m, resolve: [36m[Function (anonymous)][39m }
withResolver {
  resolver: { interfaceVersion: [33m2[39m, resolve: [36m[Function (anonymous)][39m },
  config: { extensions: [ [32m'.ts'[39m, [32m'.tsx'[39m, [32m'.json'[39m, [32m'.ts'[39m, [32m'.d.ts'[39m ] }
}
v2 {
  resolver: { interfaceVersion: [33m2[39m, resolve: [36m[Function (anonymous)][39m },
  resolve: [36m[Function (anonymous)][39m,
  modulePath: [32m'@testlib/sublib'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  config: { extensions: [ [32m'.ts'[39m, [32m'.tsx'[39m, [32m'.json'[39m, [32m'.ts'[39m, [32m'.d.ts'[39m ] }
}
not resolved
resolver pair {
  name: [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m,
  config: { extensions: [ [32m'.js'[39m, [32m'.jsx'[39m, [32m'.ts'[39m, [32m'.tsx'[39m ] },
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
requireResolver {
  name: [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
tryRequire {
  target: [32m'eslint-import-resolver-/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
(end) tryRequire: not found
tryRequire {
  target: [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
(end) tryRequire: module found, trying to load
(end) requireResolver: loaded resolver { interfaceVersion: [33m2[39m, resolve: [36m[Function (anonymous)][39m }
withResolver {
  resolver: { interfaceVersion: [33m2[39m, resolve: [36m[Function (anonymous)][39m },
  config: { extensions: [ [32m'.js'[39m, [32m'.jsx'[39m, [32m'.ts'[39m, [32m'.tsx'[39m ] }
}
v2 {
  resolver: { interfaceVersion: [33m2[39m, resolve: [36m[Function (anonymous)][39m },
  resolve: [36m[Function (anonymous)][39m,
  modulePath: [32m'@testlib/sublib'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  config: { extensions: [ [32m'.js'[39m, [32m'.jsx'[39m, [32m'.ts'[39m, [32m'.tsx'[39m ] }
}
not resolved
resolver pair {
  name: [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m,
  config: { alwaysTryTypes: [33mtrue[39m },
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
requireResolver {
  name: [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
tryRequire {
  target: [32m'eslint-import-resolver-/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
(end) tryRequire: not found
tryRequire {
  target: [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
(end) tryRequire: module found, trying to load
(end) requireResolver: loaded resolver { interfaceVersion: [33m2[39m, resolve: [36m[Function: resolve][39m }
withResolver {
  resolver: { interfaceVersion: [33m2[39m, resolve: [36m[Function: resolve][39m },
  config: { alwaysTryTypes: [33mtrue[39m }
}
v2 {
  resolver: { interfaceVersion: [33m2[39m, resolve: [36m[Function: resolve][39m },
  resolve: [36m[Function: resolve][39m,
  modulePath: [32m'@testlib/sublib'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  config: { alwaysTryTypes: [33mtrue[39m }
}
cjs.resolve {
  source: [32m'@testlib/sublib'[39m,
  file: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  options: { alwaysTryTypes: [33mtrue[39m }
}
looking for: @testlib/sublib
tsconfig v /Users/paris/parisbre56/eslint_test
configLoader {
  cwd: [32m'/Users/paris/parisbre56/eslint_test'[39m,
  explicitParams: [90mundefined[39m,
  tsConfigLoader: [36m[Function: tsConfigLoader][39m
}
failed to init tsconfig-paths: Couldn't find tsconfig.json
cjs.resolve {
  source: [32m'@types/testlib__sublib'[39m,
  file: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  options: { alwaysTryTypes: [33mtrue[39m }
}
looking for: @types/testlib__sublib
didn't find  @types/testlib__sublib
didn't find  @testlib/sublib
not resolved
fullResolve {
  modulePath: [32m'@testlib/sublib'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  settings: {
    [32m'import/resolver'[39m: {
      typescript: {},
      node: [36m[Object][39m,
      [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m: [36m[Object][39m,
      [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m: [36m[Object][39m
    },
    [32m'import/parsers'[39m: {
      [32m'@typescript-eslint/parser'[39m: [36m[Array][39m,
      [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-config-next/node_modules/@typescript-eslint/parser/dist/index.js'[39m: [36m[Array][39m
    },
    [32m'import/extensions'[39m: [ [32m'.js'[39m, [32m'.mjs'[39m, [32m'.jsx'[39m, [32m'.ts'[39m, [32m'.tsx'[39m, [32m'.d.ts'[39m ],
    [32m'import/external-module-folders'[39m: [ [32m'node_modules'[39m, [32m'node_modules/@types'[39m ],
    react: { version: [32m'detect'[39m },
    [32m'import/core-modules'[39m: [],
    [32m'import/ignore'[39m: [ [32m'node_modules'[39m, [32m'\\.(coffee|scss|css|less|hbs|svg|json)$'[39m ]
  }
}
configResolvers {
  typescript: {},
  node: { extensions: [ [32m'.ts'[39m, [32m'.tsx'[39m, [32m'.json'[39m, [32m'.ts'[39m, [32m'.d.ts'[39m ] },
  [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m: { extensions: [ [32m'.js'[39m, [32m'.jsx'[39m, [32m'.ts'[39m, [32m'.tsx'[39m ] },
  [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m: { alwaysTryTypes: [33mtrue[39m }
}
resolvers Map(4) {
  [32m'typescript'[39m => {},
  [32m'node'[39m => { extensions: [ [32m'.ts'[39m, [32m'.tsx'[39m, [32m'.json'[39m, [32m'.ts'[39m, [32m'.d.ts'[39m ] },
  [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m => { extensions: [ [32m'.js'[39m, [32m'.jsx'[39m, [32m'.ts'[39m, [32m'.tsx'[39m ] },
  [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m => { alwaysTryTypes: [33mtrue[39m }
}
resolver pair {
  name: [32m'typescript'[39m,
  config: {},
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
requireResolver {
  name: [32m'typescript'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
tryRequire {
  target: [32m'eslint-import-resolver-typescript'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
(end) tryRequire: module found, trying to load
(end) requireResolver: loaded resolver { interfaceVersion: [33m2[39m, resolve: [36m[Function: resolve][39m }
withResolver {
  resolver: { interfaceVersion: [33m2[39m, resolve: [36m[Function: resolve][39m },
  config: {}
}
v2 {
  resolver: { interfaceVersion: [33m2[39m, resolve: [36m[Function: resolve][39m },
  resolve: [36m[Function: resolve][39m,
  modulePath: [32m'@testlib/sublib'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  config: {}
}
cjs.resolve {
  source: [32m'@testlib/sublib'[39m,
  file: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  options: {}
}
looking for: @testlib/sublib
tsconfig v /Users/paris/parisbre56/eslint_test
configLoader {
  cwd: [32m'/Users/paris/parisbre56/eslint_test'[39m,
  explicitParams: [90mundefined[39m,
  tsConfigLoader: [36m[Function: tsConfigLoader][39m
}
failed to init tsconfig-paths: Couldn't find tsconfig.json
didn't find  @testlib/sublib
not resolved
resolver pair {
  name: [32m'node'[39m,
  config: { extensions: [ [32m'.ts'[39m, [32m'.tsx'[39m, [32m'.json'[39m, [32m'.ts'[39m, [32m'.d.ts'[39m ] },
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
requireResolver {
  name: [32m'node'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
tryRequire {
  target: [32m'eslint-import-resolver-node'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
(end) tryRequire: module found, trying to load
(end) requireResolver: loaded resolver { interfaceVersion: [33m2[39m, resolve: [36m[Function (anonymous)][39m }
withResolver {
  resolver: { interfaceVersion: [33m2[39m, resolve: [36m[Function (anonymous)][39m },
  config: { extensions: [ [32m'.ts'[39m, [32m'.tsx'[39m, [32m'.json'[39m, [32m'.ts'[39m, [32m'.d.ts'[39m ] }
}
v2 {
  resolver: { interfaceVersion: [33m2[39m, resolve: [36m[Function (anonymous)][39m },
  resolve: [36m[Function (anonymous)][39m,
  modulePath: [32m'@testlib/sublib'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  config: { extensions: [ [32m'.ts'[39m, [32m'.tsx'[39m, [32m'.json'[39m, [32m'.ts'[39m, [32m'.d.ts'[39m ] }
}
not resolved
resolver pair {
  name: [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m,
  config: { extensions: [ [32m'.js'[39m, [32m'.jsx'[39m, [32m'.ts'[39m, [32m'.tsx'[39m ] },
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
requireResolver {
  name: [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
tryRequire {
  target: [32m'eslint-import-resolver-/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
(end) tryRequire: not found
tryRequire {
  target: [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
(end) tryRequire: module found, trying to load
(end) requireResolver: loaded resolver { interfaceVersion: [33m2[39m, resolve: [36m[Function (anonymous)][39m }
withResolver {
  resolver: { interfaceVersion: [33m2[39m, resolve: [36m[Function (anonymous)][39m },
  config: { extensions: [ [32m'.js'[39m, [32m'.jsx'[39m, [32m'.ts'[39m, [32m'.tsx'[39m ] }
}
v2 {
  resolver: { interfaceVersion: [33m2[39m, resolve: [36m[Function (anonymous)][39m },
  resolve: [36m[Function (anonymous)][39m,
  modulePath: [32m'@testlib/sublib'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  config: { extensions: [ [32m'.js'[39m, [32m'.jsx'[39m, [32m'.ts'[39m, [32m'.tsx'[39m ] }
}
not resolved
resolver pair {
  name: [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m,
  config: { alwaysTryTypes: [33mtrue[39m },
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
requireResolver {
  name: [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
tryRequire {
  target: [32m'eslint-import-resolver-/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
(end) tryRequire: not found
tryRequire {
  target: [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
(end) tryRequire: module found, trying to load
(end) requireResolver: loaded resolver { interfaceVersion: [33m2[39m, resolve: [36m[Function: resolve][39m }
withResolver {
  resolver: { interfaceVersion: [33m2[39m, resolve: [36m[Function: resolve][39m },
  config: { alwaysTryTypes: [33mtrue[39m }
}
v2 {
  resolver: { interfaceVersion: [33m2[39m, resolve: [36m[Function: resolve][39m },
  resolve: [36m[Function: resolve][39m,
  modulePath: [32m'@testlib/sublib'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  config: { alwaysTryTypes: [33mtrue[39m }
}
cjs.resolve {
  source: [32m'@testlib/sublib'[39m,
  file: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  options: { alwaysTryTypes: [33mtrue[39m }
}
looking for: @testlib/sublib
tsconfig v /Users/paris/parisbre56/eslint_test
configLoader {
  cwd: [32m'/Users/paris/parisbre56/eslint_test'[39m,
  explicitParams: [90mundefined[39m,
  tsConfigLoader: [36m[Function: tsConfigLoader][39m
}
failed to init tsconfig-paths: Couldn't find tsconfig.json
cjs.resolve {
  source: [32m'@types/testlib__sublib'[39m,
  file: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  options: { alwaysTryTypes: [33mtrue[39m }
}
looking for: @types/testlib__sublib
didn't find  @types/testlib__sublib
didn't find  @testlib/sublib
not resolved
resolverFunction [Function: resolve] { relative: [36m[Function: relative][39m }
fullResolve {
  modulePath: [32m'@testlib/sublib'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  settings: {
    [32m'import/resolver'[39m: {
      typescript: {},
      node: [36m[Object][39m,
      [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m: [36m[Object][39m,
      [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m: [36m[Object][39m
    },
    [32m'import/parsers'[39m: {
      [32m'@typescript-eslint/parser'[39m: [36m[Array][39m,
      [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-config-next/node_modules/@typescript-eslint/parser/dist/index.js'[39m: [36m[Array][39m
    },
    [32m'import/extensions'[39m: [ [32m'.js'[39m, [32m'.mjs'[39m, [32m'.jsx'[39m, [32m'.ts'[39m, [32m'.tsx'[39m, [32m'.d.ts'[39m ],
    [32m'import/external-module-folders'[39m: [ [32m'node_modules'[39m, [32m'node_modules/@types'[39m ],
    react: { version: [32m'detect'[39m },
    [32m'import/core-modules'[39m: [],
    [32m'import/ignore'[39m: [ [32m'node_modules'[39m, [32m'\\.(coffee|scss|css|less|hbs|svg|json)$'[39m ]
  }
}
configResolvers {
  typescript: {},
  node: { extensions: [ [32m'.ts'[39m, [32m'.tsx'[39m, [32m'.json'[39m, [32m'.ts'[39m, [32m'.d.ts'[39m ] },
  [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m: { extensions: [ [32m'.js'[39m, [32m'.jsx'[39m, [32m'.ts'[39m, [32m'.tsx'[39m ] },
  [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m: { alwaysTryTypes: [33mtrue[39m }
}
resolvers Map(4) {
  [32m'typescript'[39m => {},
  [32m'node'[39m => { extensions: [ [32m'.ts'[39m, [32m'.tsx'[39m, [32m'.json'[39m, [32m'.ts'[39m, [32m'.d.ts'[39m ] },
  [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m => { extensions: [ [32m'.js'[39m, [32m'.jsx'[39m, [32m'.ts'[39m, [32m'.tsx'[39m ] },
  [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m => { alwaysTryTypes: [33mtrue[39m }
}
resolver pair {
  name: [32m'typescript'[39m,
  config: {},
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
requireResolver {
  name: [32m'typescript'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
tryRequire {
  target: [32m'eslint-import-resolver-typescript'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
(end) tryRequire: module found, trying to load
(end) requireResolver: loaded resolver { interfaceVersion: [33m2[39m, resolve: [36m[Function: resolve][39m }
withResolver {
  resolver: { interfaceVersion: [33m2[39m, resolve: [36m[Function: resolve][39m },
  config: {}
}
v2 {
  resolver: { interfaceVersion: [33m2[39m, resolve: [36m[Function: resolve][39m },
  resolve: [36m[Function: resolve][39m,
  modulePath: [32m'@testlib/sublib'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  config: {}
}
cjs.resolve {
  source: [32m'@testlib/sublib'[39m,
  file: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  options: {}
}
looking for: @testlib/sublib
tsconfig v /Users/paris/parisbre56/eslint_test
configLoader {
  cwd: [32m'/Users/paris/parisbre56/eslint_test'[39m,
  explicitParams: [90mundefined[39m,
  tsConfigLoader: [36m[Function: tsConfigLoader][39m
}
failed to init tsconfig-paths: Couldn't find tsconfig.json
didn't find  @testlib/sublib
not resolved
resolver pair {
  name: [32m'node'[39m,
  config: { extensions: [ [32m'.ts'[39m, [32m'.tsx'[39m, [32m'.json'[39m, [32m'.ts'[39m, [32m'.d.ts'[39m ] },
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
requireResolver {
  name: [32m'node'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
tryRequire {
  target: [32m'eslint-import-resolver-node'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
(end) tryRequire: module found, trying to load
(end) requireResolver: loaded resolver { interfaceVersion: [33m2[39m, resolve: [36m[Function (anonymous)][39m }
withResolver {
  resolver: { interfaceVersion: [33m2[39m, resolve: [36m[Function (anonymous)][39m },
  config: { extensions: [ [32m'.ts'[39m, [32m'.tsx'[39m, [32m'.json'[39m, [32m'.ts'[39m, [32m'.d.ts'[39m ] }
}
v2 {
  resolver: { interfaceVersion: [33m2[39m, resolve: [36m[Function (anonymous)][39m },
  resolve: [36m[Function (anonymous)][39m,
  modulePath: [32m'@testlib/sublib'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  config: { extensions: [ [32m'.ts'[39m, [32m'.tsx'[39m, [32m'.json'[39m, [32m'.ts'[39m, [32m'.d.ts'[39m ] }
}
not resolved
resolver pair {
  name: [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m,
  config: { extensions: [ [32m'.js'[39m, [32m'.jsx'[39m, [32m'.ts'[39m, [32m'.tsx'[39m ] },
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
requireResolver {
  name: [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
tryRequire {
  target: [32m'eslint-import-resolver-/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
(end) tryRequire: not found
tryRequire {
  target: [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-node/index.js'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
(end) tryRequire: module found, trying to load
(end) requireResolver: loaded resolver { interfaceVersion: [33m2[39m, resolve: [36m[Function (anonymous)][39m }
withResolver {
  resolver: { interfaceVersion: [33m2[39m, resolve: [36m[Function (anonymous)][39m },
  config: { extensions: [ [32m'.js'[39m, [32m'.jsx'[39m, [32m'.ts'[39m, [32m'.tsx'[39m ] }
}
v2 {
  resolver: { interfaceVersion: [33m2[39m, resolve: [36m[Function (anonymous)][39m },
  resolve: [36m[Function (anonymous)][39m,
  modulePath: [32m'@testlib/sublib'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  config: { extensions: [ [32m'.js'[39m, [32m'.jsx'[39m, [32m'.ts'[39m, [32m'.tsx'[39m ] }
}
not resolved
resolver pair {
  name: [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m,
  config: { alwaysTryTypes: [33mtrue[39m },
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
requireResolver {
  name: [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
tryRequire {
  target: [32m'eslint-import-resolver-/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
(end) tryRequire: not found
tryRequire {
  target: [32m'/Users/paris/parisbre56/eslint_test/node_modules/eslint-import-resolver-typescript/lib/index.cjs'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m
}
(end) tryRequire: module found, trying to load
(end) requireResolver: loaded resolver { interfaceVersion: [33m2[39m, resolve: [36m[Function: resolve][39m }
withResolver {
  resolver: { interfaceVersion: [33m2[39m, resolve: [36m[Function: resolve][39m },
  config: { alwaysTryTypes: [33mtrue[39m }
}
v2 {
  resolver: { interfaceVersion: [33m2[39m, resolve: [36m[Function: resolve][39m },
  resolve: [36m[Function: resolve][39m,
  modulePath: [32m'@testlib/sublib'[39m,
  sourceFile: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  config: { alwaysTryTypes: [33mtrue[39m }
}
cjs.resolve {
  source: [32m'@testlib/sublib'[39m,
  file: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  options: { alwaysTryTypes: [33mtrue[39m }
}
looking for: @testlib/sublib
tsconfig v /Users/paris/parisbre56/eslint_test
configLoader {
  cwd: [32m'/Users/paris/parisbre56/eslint_test'[39m,
  explicitParams: [90mundefined[39m,
  tsConfigLoader: [36m[Function: tsConfigLoader][39m
}
failed to init tsconfig-paths: Couldn't find tsconfig.json
cjs.resolve {
  source: [32m'@types/testlib__sublib'[39m,
  file: [32m'/Users/paris/parisbre56/eslint_test/apps/testapp/src/pages/index.tsx'[39m,
  options: { alwaysTryTypes: [33mtrue[39m }
}
looking for: @types/testlib__sublib
didn't find  @types/testlib__sublib
didn't find  @testlib/sublib
not resolved
typeTest @testlib/sublib {
  id: [32m'import/no-relative-packages'[39m,
  options: [],
  report: [36m[Function: report][39m
} [90mundefined[39m
internalScope [90mundefined[39m
isModule [33mfalse[39m @testlib/sublib
isScoped [33mtrue[39m @testlib/sublib
externalName

All files pass linting.

