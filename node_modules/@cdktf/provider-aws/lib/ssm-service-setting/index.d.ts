import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
export interface SsmServiceSettingConfig extends cdktf.TerraformMetaArguments {
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ssm_service_setting#id SsmServiceSetting#id}
    *
    * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
    * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
    */
    readonly id?: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ssm_service_setting#setting_id SsmServiceSetting#setting_id}
    */
    readonly settingId: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/ssm_service_setting#setting_value SsmServiceSetting#setting_value}
    */
    readonly settingValue: string;
}
/**
* Represents a {@link https://www.terraform.io/docs/providers/aws/r/ssm_service_setting aws_ssm_service_setting}
*/
export declare class SsmServiceSetting extends cdktf.TerraformResource {
    static readonly tfResourceType = "aws_ssm_service_setting";
    /**
    * Create a new {@link https://www.terraform.io/docs/providers/aws/r/ssm_service_setting aws_ssm_service_setting} Resource
    *
    * @param scope The scope in which to define this construct
    * @param id The scoped construct ID. Must be unique amongst siblings in the same scope
    * @param options SsmServiceSettingConfig
    */
    constructor(scope: Construct, id: string, config: SsmServiceSettingConfig);
    get arn(): string;
    private _id?;
    get id(): string;
    set id(value: string);
    resetId(): void;
    get idInput(): string | undefined;
    private _settingId?;
    get settingId(): string;
    set settingId(value: string);
    get settingIdInput(): string | undefined;
    private _settingValue?;
    get settingValue(): string;
    set settingValue(value: string);
    get settingValueInput(): string | undefined;
    get status(): string;
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}
