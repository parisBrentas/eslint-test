import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
export interface RolesanywhereTrustAnchorConfig extends cdktf.TerraformMetaArguments {
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rolesanywhere_trust_anchor#enabled RolesanywhereTrustAnchor#enabled}
    */
    readonly enabled?: boolean | cdktf.IResolvable;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rolesanywhere_trust_anchor#id RolesanywhereTrustAnchor#id}
    *
    * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
    * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
    */
    readonly id?: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rolesanywhere_trust_anchor#name RolesanywhereTrustAnchor#name}
    */
    readonly name: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rolesanywhere_trust_anchor#tags RolesanywhereTrustAnchor#tags}
    */
    readonly tags?: {
        [key: string]: string;
    };
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rolesanywhere_trust_anchor#tags_all RolesanywhereTrustAnchor#tags_all}
    */
    readonly tagsAll?: {
        [key: string]: string;
    };
    /**
    * source block
    *
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rolesanywhere_trust_anchor#source RolesanywhereTrustAnchor#source}
    */
    readonly source: RolesanywhereTrustAnchorSource;
}
export interface RolesanywhereTrustAnchorSourceSourceData {
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rolesanywhere_trust_anchor#acm_pca_arn RolesanywhereTrustAnchor#acm_pca_arn}
    */
    readonly acmPcaArn?: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rolesanywhere_trust_anchor#x509_certificate_data RolesanywhereTrustAnchor#x509_certificate_data}
    */
    readonly x509CertificateData?: string;
}
export declare function rolesanywhereTrustAnchorSourceSourceDataToTerraform(struct?: RolesanywhereTrustAnchorSourceSourceDataOutputReference | RolesanywhereTrustAnchorSourceSourceData): any;
export declare class RolesanywhereTrustAnchorSourceSourceDataOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string);
    get internalValue(): RolesanywhereTrustAnchorSourceSourceData | undefined;
    set internalValue(value: RolesanywhereTrustAnchorSourceSourceData | undefined);
    private _acmPcaArn?;
    get acmPcaArn(): string;
    set acmPcaArn(value: string);
    resetAcmPcaArn(): void;
    get acmPcaArnInput(): string | undefined;
    private _x509CertificateData?;
    get x509CertificateData(): string;
    set x509CertificateData(value: string);
    resetX509CertificateData(): void;
    get x509CertificateDataInput(): string | undefined;
}
export interface RolesanywhereTrustAnchorSource {
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rolesanywhere_trust_anchor#source_type RolesanywhereTrustAnchor#source_type}
    */
    readonly sourceType: string;
    /**
    * source_data block
    *
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/r/rolesanywhere_trust_anchor#source_data RolesanywhereTrustAnchor#source_data}
    */
    readonly sourceData: RolesanywhereTrustAnchorSourceSourceData;
}
export declare function rolesanywhereTrustAnchorSourceToTerraform(struct?: RolesanywhereTrustAnchorSourceOutputReference | RolesanywhereTrustAnchorSource): any;
export declare class RolesanywhereTrustAnchorSourceOutputReference extends cdktf.ComplexObject {
    private isEmptyObject;
    /**
    * @param terraformResource The parent resource
    * @param terraformAttribute The attribute on the parent resource this class is referencing
    */
    constructor(terraformResource: cdktf.IInterpolatingParent, terraformAttribute: string);
    get internalValue(): RolesanywhereTrustAnchorSource | undefined;
    set internalValue(value: RolesanywhereTrustAnchorSource | undefined);
    private _sourceType?;
    get sourceType(): string;
    set sourceType(value: string);
    get sourceTypeInput(): string | undefined;
    private _sourceData;
    get sourceData(): RolesanywhereTrustAnchorSourceSourceDataOutputReference;
    putSourceData(value: RolesanywhereTrustAnchorSourceSourceData): void;
    get sourceDataInput(): RolesanywhereTrustAnchorSourceSourceData | undefined;
}
/**
* Represents a {@link https://www.terraform.io/docs/providers/aws/r/rolesanywhere_trust_anchor aws_rolesanywhere_trust_anchor}
*/
export declare class RolesanywhereTrustAnchor extends cdktf.TerraformResource {
    static readonly tfResourceType = "aws_rolesanywhere_trust_anchor";
    /**
    * Create a new {@link https://www.terraform.io/docs/providers/aws/r/rolesanywhere_trust_anchor aws_rolesanywhere_trust_anchor} Resource
    *
    * @param scope The scope in which to define this construct
    * @param id The scoped construct ID. Must be unique amongst siblings in the same scope
    * @param options RolesanywhereTrustAnchorConfig
    */
    constructor(scope: Construct, id: string, config: RolesanywhereTrustAnchorConfig);
    get arn(): string;
    private _enabled?;
    get enabled(): boolean | cdktf.IResolvable;
    set enabled(value: boolean | cdktf.IResolvable);
    resetEnabled(): void;
    get enabledInput(): boolean | cdktf.IResolvable | undefined;
    private _id?;
    get id(): string;
    set id(value: string);
    resetId(): void;
    get idInput(): string | undefined;
    private _name?;
    get name(): string;
    set name(value: string);
    get nameInput(): string | undefined;
    private _tags?;
    get tags(): {
        [key: string]: string;
    };
    set tags(value: {
        [key: string]: string;
    });
    resetTags(): void;
    get tagsInput(): {
        [key: string]: string;
    } | undefined;
    private _tagsAll?;
    get tagsAll(): {
        [key: string]: string;
    };
    set tagsAll(value: {
        [key: string]: string;
    });
    resetTagsAll(): void;
    get tagsAllInput(): {
        [key: string]: string;
    } | undefined;
    private _source;
    get source(): RolesanywhereTrustAnchorSourceOutputReference;
    putSource(value: RolesanywhereTrustAnchorSource): void;
    get sourceInput(): RolesanywhereTrustAnchorSource | undefined;
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}
