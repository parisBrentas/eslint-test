import { Construct } from 'constructs';
import * as cdktf from 'cdktf';
export interface DataAwsWorkspacesImageConfig extends cdktf.TerraformMetaArguments {
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/d/workspaces_image#id DataAwsWorkspacesImage#id}
    *
    * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
    * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
    */
    readonly id?: string;
    /**
    * Docs at Terraform Registry: {@link https://www.terraform.io/docs/providers/aws/d/workspaces_image#image_id DataAwsWorkspacesImage#image_id}
    */
    readonly imageId: string;
}
/**
* Represents a {@link https://www.terraform.io/docs/providers/aws/d/workspaces_image aws_workspaces_image}
*/
export declare class DataAwsWorkspacesImage extends cdktf.TerraformDataSource {
    static readonly tfResourceType = "aws_workspaces_image";
    /**
    * Create a new {@link https://www.terraform.io/docs/providers/aws/d/workspaces_image aws_workspaces_image} Data Source
    *
    * @param scope The scope in which to define this construct
    * @param id The scoped construct ID. Must be unique amongst siblings in the same scope
    * @param options DataAwsWorkspacesImageConfig
    */
    constructor(scope: Construct, id: string, config: DataAwsWorkspacesImageConfig);
    get description(): string;
    private _id?;
    get id(): string;
    set id(value: string);
    resetId(): void;
    get idInput(): string | undefined;
    private _imageId?;
    get imageId(): string;
    set imageId(value: string);
    get imageIdInput(): string | undefined;
    get name(): string;
    get operatingSystemType(): string;
    get requiredTenancy(): string;
    get state(): string;
    protected synthesizeAttributes(): {
        [name: string]: any;
    };
}
